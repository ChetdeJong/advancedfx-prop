Hint:
  In case some of the required downloads are not reachable, we have a backup
  here:
  https://cloud.gmx.net/ngcloud/external?locale=de&guestToken=OHS9FADDSUqEBYNOQ8SSig&loginName=programmer99@gmx.de

[X] Download and install Microsoft Visual C++ 2010 and Microsoft Visual
    C# 2010, which you can obtain for free from http://www.microsoft.com (Express
    editions will do).

[X] _After that_ download and install Micrsoft Visual Studio 2010 SP1,
    which you can obtain for free from http://www.microsoft.com

[X] Download the Half-Life SDK from
    http://github.com/ValveSoftware/halflife
    and install it into C:\Libraries\halflife

[ ] This step is not required by default, only when you plan to build AfxHookGoldSrc with AFX_SCRIPT!
    Download the Mozilla Build Environment from
    http://ftp.mozilla.org/pub/mozilla.org/mozilla/libraries/win32/MozillaBuildSetup-1.8.0.exe
    and install it into a folder you like.

[ ] This step is not required by default, only when you plan to build AfxHookGoldSrc with AFX_SCRIPT!
    Download the Mozilla SpiderMonkey (JS) library from
    http://ftp.mozilla.org/pub/mozilla.org/js/mozjs-24.2.0.tar.bz2
    and extract it into a folder you like.

[ ] This step is not required by default, only when you plan to build AfxHookGoldSrc with AFX_SCRIPT!
    Compile the SpiderMonkey (JS) library using the Mozilla Build Environment
    ( start-msvc10.bat ) using the following commands:
    cd path_to_js_library/js/src
    autoconf-2.13
    ./configure
    make

[ ] This step is not required by default, only when you plan to build AfxHookGoldSrc with AFX_SCRIPT! 
    Copy the contents of the created JS dist folder (js/src/build-release/dist
    to c:\Libraries\js

[ ] This step is currently not required!
    Obtain freetype 2.6 from http://freetype.org/ and extract it into
    C:\Libraries\freetype-2.6.
    Then build the freetye project in
    C:\Libraries\freetype-2.6\builds\windows\vc2010\freetype.sln in
    Configuration=Release Multithreaded.

[X] Obtain and install CMAKE from http://www.cmake.org/
    We currently use "cmake-3.3.1-win32-x86.exe".

[ ] This step is currently not required!
    Obtain the stable version of libRocket from
    https://github.com/libRocket/libRocket/tree/stable and extract it into
    C:\Libraries\libRocket

[ ] This step is currently not required!
    Build libRocket solutions using cmake:
    Enter C:\Libraries\libRocket\Build directory and execute
    cmake . "-DFREETYPE_LIBRARY=C:\Libraries\freetype-2.6\objs\vc2010\Win32\freetype26MT.lib" "-DFREETYPE_INCLUDE_DIRS=C:\Libraries\freetype-2.6\include"

[ ] This step is currently not required!
    Open the libRocket.sln created in step 11 and build RocketCore,
    RocketControls and RockedDebugger in
    Configuration=Release

[X] Obtain the HLAE source code from http://advancedfx.org and extract it into a
    folder you like, we'll call it <HLAESRC> from now on.

[X] Obtain the following files from http://openexr.com/ :
    ilmbase-2.2.0.tar.gz, openexr-2.2.0.tar.gz and extract their contents
    into "C:\Libraries"

[X] Obtain zlib-1.2.8.tar.gz from http://zlib.net and extract it into
    "C:\Libraries"

[X] Build ilmbase solutions using cmake:
    Enter the "C:\Libraries\ilmbase-2.2.0" directory and execute
    setlocal
    del /f CMakeCache.txt
    cmake "-DCMAKE_INSTALL_PREFIX=C:\<HLAESRC>\ilmbase-build" -G "Visual Studio 10 2010"

[X] Open the C:\Libraries\ilmbase-2.2.0\ilmbase.sln created in the previous step
    Select the Release configuration.
    Build the projects b44ExpLogTable and dwaLookups.
    Then copy the .dll files in "C:\<HLAESRC>\ilmbase-build\lib"
    to "C:\Libraries\openexr-2.2.0\IlmImf\Release"!
    Then build the Solution.
    After that build the INSTALL project in the solution.

[X] Build zlib using nmake:
    Open the Visual Studio Command Prompt (2010) and enter the
    "C:\Libraries\zlib-1.2.8" directory and execute
    nmake -f win32/Makefile.msc zlib1.dll
    nmake -f win32/Makefile.msc example_d.exe
    example_d.exe (To see if the zlib1.dll is okay.)

[X] Build openexr solutions using cmake:
    Enter the "C:\Libraries\openexr-2.2.0" directory and execute
    setlocal
    del /f CMakeCache.txt
    cmake "-DZLIB_ROOT=C:\Libraries\zlib-1.2.8" "-DILMBASE_PACKAGE_PREFIX=C:\source\ilmbase-build" "-DCMAKE_INSTALL_PREFIX=C:\source\openexr-build" -G "Visual Studio 10 2010"

[X] Open the C:\Libraries\openexr-2.2.0\openexr.sln created in the previous step
    Select the Release configuration and then build the Solution.
    After that build the INSTALL project in the solution.
    If you want to use the .exe files in "C:\<HLAESRC>\openexr-build\bin",
    then you need to copy all DLL files from
    "C:\<HLAESRC>\ilmbase-build\lib", "C:\source\openexr-build\lib" and
    "C:\Libraries\zlib-1.2.8" there.

[X] Obtain the SharpDX SDK 2.6.3 from
    https://github.com/sharpdx/SharpDX/releases/tag/2.6.3
    and extract it into a folder named "SharpDX" in the same folder where the
    HLAE source code folder is located.

[X] Compile and run the ShaderBuilder project (requires the SharpDX SDK) and
    compile the following Shaders to the "shaders\build" folder:
    - shaders\afxHook_splinerope_ps2x.fxc:
      - to afxHook_splinerope_ps20 (profile ps_2_0)
      - to afxHook_splinerope_ps20b (profile ps_2_b)
    - shaders\afxHook_splinecard_vsxx.fxc:
      - to afxHook_splinecard_vs20 (profile vs_2_0)
    - shaders\afxHook_spritecard_vsxx.fxc:
      - to afxHook_spritecard_vs20 (profile vs_2_0)
    - shaders\afxHook_spritecard_ps2x.fxc:
      - to afxHook_spritecard_ps20 (profile ps_2_0)
      - to afxHook_spritecard_ps20b (profile ps_2_b)
    - shaders\afxHook_vertexlit_and_unlit_generic_ps2x.fxc:
      - to afxHook_vertexlit_and_unlit_generic_ps20 (profile ps_2_0)
      - to afxHook_vertexlit_and_unlit_generic_ps20b (profile ps_2_b)
      - to afxHook_vertexlit_and_unlit_generic_ps30 (profile ps_3_0)
    The .h and .acs files build this way are required by the AfxHookSource
    project.

[X] Open mdt.sln in the HLAE source code ("C:\<HLAESRC>\advancedfx" folder)
    and Build (Configuration=Release):
    AfxHookGoldSrc, AfxHookSource, AfxCppCli

[X] AfxHook\recompile.bat, move AfxHook.dat into build\Release\bin\

[X] Build AfxGui (Release), move and rename AfxGui.exe to
    "C:\<HLAESRC>\advancedfx\build\Release\bin\HLAE.exe"

[X] Use "C:\<HLAESRC>\advancedfx\copy_resources_release.bat""
    to copy required files and folders to the
    "C:\<HLAESRC>\advancedfx\build\Release\bin" folder.

[X] Copy msvcp100.dll, msvcr100.dll (CRT runtime, required by C++ and C++/CLI
    projects) from your system folders (on 64 bit systems in C:\Windows\SysWOW64
    on 32 bit systems in C:\Windows\system32)
    to "C:\<HLAESRC>\advancedfx\build\Release\bin"
    Make sure to select the correct source folder as suggested above, so that
    you end up with the 32 bit binaries.

[X] Copy all DLL files from
    "C:\<HLAESRC>\ilmbase-build\lib",
    "C:\source\openexr-build\lib" (except "IlmImfUtil-2_2.dll") and
    "C:\Libraries\zlib-1.2.8"
    to "C:\<HLAESRC>\advancedfx\build\Release\bin"

[ ] This step is not required by default, only when you plan to build AfxHookGoldSrc with AFX_SCRIPT!
    Copy mozjs-24.dll from C:\Libraries\js\bin
    to "C:\<HLAESRC>\advancedfx\build\Release\bin"

[ ] This step is currently not required!
    Copy RocketCore.dll, RocketControls.dll from
    C:\Libraries\libRocket\Build\Release
    to "C:\<HLAESRC>\advancedfx\build\Release\bin"

[X] You currently need to package the following files and folders in the final
    .ZIP file:
	resources,
	advancedfx.org.url,
	AfxCppCli.dll,
	AfxHook.dat,
	AfxHookGoldSrc.dll,
	AfxHookGoldSrc_changelog.xml,
	AfxHookSource.dll,
	AfxHookSource_changelog.xml,
	changelog.xml,
	changelog.xsl,
	Half.dll,
	HLAE.exe,
	Iex-2_2.dll,
	IexMath-2_2.dll,
	IlmImf-2_2.dll,
	IlmThread-2_2.dll,
	Imath-2_2.dll,
	msvcp100.dll,
	msvcr100.dll,
	readme.txt,
	zlib1.dll
