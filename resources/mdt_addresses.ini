; ------------------------------------------------------------------------------
; Half-Life Advanced Effects Address System configuration file
; ------------------------------------------------------------------------------
;
; This file is part of the Half-Life Advanced Effects project:
; http://advancedfx.org
;
; This file is provided as is.
; Altered versions must be cleary marked as such and must not be misrepresented
; as being the original software.
;
; If you are interested in helping as a coder or with documentation or HLAE
; community support and you are not an asshole, we'd like to get to know you:
; http://www.madabouthats.org/code-mdt/viewtopic.php?t=89
;
;
; ------------------------------------------------------------------------------
; Description:
; ------------------------------------------------------------------------------
;
; Addresses are defined in hexadecimal notation (C style).
; The allocations can be very simple expressions using + (plus), - (minus) and ^ (indirection).
; The left part of an expression is always evaluated before an operator is applied.
; You may also use the address variables or temporary variables in expressions, but they must have been defined before!
; The definition order is the line order.
; The temporary variables available are _v0,_v1,...,_v9,_vA,_vB,...,_vF
; There is a special variable _HW_DLL which is filled with base address of "hw.dll" by the address system
; Variable names are case sensitive.
;
; However indirections should be avoided at the moment, since there is no guraantee yet, when the inderection will be excuted (the data you want to get might not be present in memory at the time of execution).
;
;
; ------------------------------------------------------------------------------
; General hooks:
; ------------------------------------------------------------------------------
;
p_cl_enginefuncs_s = _HW_DLL + 0x166A98; new
p_engine_studio_api_s = _HW_DLL + 0x1828D0 ; new
p_playermove_s = _HW_DLL + 0xFD59A0 ; new
;
;
; ------------------------------------------------------------------------------
; Filming system hooks:
; ------------------------------------------------------------------------------
;
_v1 = _HW_DLL + 0xCE230 ; SCR_UpdateScreen ; new
;
HUD_TOURIN = _v1 + 0xd4
HUD_TOUROUT = HUD_TOURIN + 0x35
;
; _delay SCR_SetUpToDrawConsole = _v1 + 0xAF ^
; _delay V_RenderView = _v1 + 0xB4 ^
; _delay GL_Set2D = _v1 + 0xB9 ^
;
;
R_RenderView_ = _HW_DLL + 0x52010 ; new
DTOURSZ_R_RenderView_ = 0x6 ; new
;
p_r_refdef = p_playermove_s - 0x13FDC0
;
; ------------------------------------------------------------------------------
; Sound system hooks:
; ------------------------------------------------------------------------------
;
GetSoundtime = _HW_DLL + 0xA3950 ; new
DTOURSZ_GetSoundtime = 0x06 ;new
;
S_PaintChannels = _HW_DLL + 0xA5F00 ; new
DTOURSZ_S_PaintChannels = 0x06 ; new
;
S_TransferPaintBuffer = _HW_DLL + 0xA5710 ; new
DTOURSZ_S_TransferPaintBuffer = 0x05
;
p_shm = _HW_DLL + 0x73F668 ; new
paintbuffer = _HW_DLL + 0x9EE5C0 ; new
soundtime = paintbuffer + 0xC15C
paintedtime = paintbuffer + 0xC160
;
; ------------------------------------------------------------------------------
; Demo Live Tools hooks (currently only mirv_voice_block)
; ------------------------------------------------------------------------------
;
CL_ParseServerMessage = _HW_DLL + 0x2A680 ; new
net_message_cursize = _HW_DLL + 0xA6E4F0 ; new
net_message = net_message_cursize - 0x10
msg_readcount = _HW_DLL + 0xFD3BE8 ; new
CL_ParseServerMessage_CmdRead = CL_ParseServerMessage + 0x0E3
DTOURSZ_CL_ParseServerMessage_CmdRead = 0x07
;
; ------------------------------------------------------------------------------
; Various hooks
; ------------------------------------------------------------------------------
;
; tfc DemoEdit campath fix:
HudSpectator_tfc = 0x01909A00 ; no change
HudSpectator_cmp_tfc = HudSpectator_tfc + 0x23 ; no change
;
; UpdateSpectatorPanel overviewmode check jump (for HLTV menu removal):
UpdateSpectatorPanel_checkjmp_ag_clofs = 0x028091 ; Adrenaline-Gamer (ag), client.dll ofs
UpdateSpectatorPanel_checkjmp_tfc = 0x019439a1 ; Team Fortress Classic (tfc)
UpdateSpectatorPanel_checkjmp_ns_clofs = 0x033F3D ; Natuaral Selection (ns), client.dll ofs
UpdateSpectatorPanel_checkjmp_valve = 0x01940221 ; Half-Life (valve)
;
; IGA:
UnkIGAWorld = _HW_DLL + 0x576E0 ; new
DTOURSZ_UnkIGAWorld = 0x05 ; new
;
; cstrike Team color hook:
GetClientColor = 0x01945010 ; function, used by head-up and overview i.e.
DTOURSZ_GetClientColor = 0x0a
unkInlineClientColorA = 0x019455db ; inline, used to draw attacker color
SZ_unkInlineClientColorA = 0x3C
unkInlineClientColorV = 0x01945665 ; inline, used to draw victim color
SZ_unkInlineClientColorV = 0x3C
;
R_PolyBlend = _HW_DLL + 0x505e0
DTOURSZ_R_PolyBlend  = 0x09
;
Mod_LeafPVS = _HW_DLL + 35D60
DTOURSZ_Mod_LeafPVS = 0x0e
