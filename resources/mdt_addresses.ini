; ------------------------------------------------------------------------------
; Half-Life Advanced Effects Address System configuration file
; ------------------------------------------------------------------------------
;
; This file is part of the Half-Life Advanced Effects project:
; http://advancedfx.org
;
; This file is provided as is.
; Altered versions must be cleary marked as such and must not be misrepresented
; as being the original software.
;
;
; ------------------------------------------------------------------------------
; Description:
; ------------------------------------------------------------------------------
;
; Addresses are defined in hexadecimal notation (C style).
; The allocations can be very simple expressions using + (plus), - (minus) and ^ (indirection).
; The left part of an expression is always evaluated before an operator is applied.
; You may also use the address variables or temporary variables in expressions, but they must have been defined before!
; The definition order is the line order.
; The temporary variables available are _v0,_v1,...,_v9,_vA,_vB,...,_vF
; There is a special variable _HW_DLL which is filled with base address of "hw.dll" by the address system
; Variable names are case sensitive.
;
; However indirections should be avoided at the moment, since there is no guraantee yet, when the inderection will be excuted (the data you want to get might not be present in memory at the time of execution).
;
;
; ------------------------------------------------------------------------------
; General hooks:
; ------------------------------------------------------------------------------
;
p_cl_enginefuncs_s = _HW_DLL + 0x166A98
p_engine_studio_api_s = _HW_DLL + 0x182978
p_playermove_s = _HW_DLL + 0xFD5A20
;
;
; ------------------------------------------------------------------------------
; Filming system hooks:
; ------------------------------------------------------------------------------
;
; Hud drawing control and interception:
_v1 = _HW_DLL + 0xCE3C0 ; SCR_UpdateScreen
HUD_TOURIN = _v1 + 0xBD
HUD_TOUROUT = HUD_TOURIN + 0x87
;
R_RenderView = _HW_DLL + 0x50C50
DTOURSZ_R_RenderView = 0x9
;
r_refdef = _HW_DLL + 0xE95540
;
;
; ------------------------------------------------------------------------------
; Sound system hooks:
; ------------------------------------------------------------------------------
;
GetSoundtime = _HW_DLL + 0xA3A70
DTOURSZ_GetSoundtime = 0x06
;
S_PaintChannels = _HW_DLL + 0xA6020
DTOURSZ_S_PaintChannels = 0x06
;
S_TransferPaintBuffer = _HW_DLL + 0xA5830
DTOURSZ_S_TransferPaintBuffer = 0x05
;
shm = _HW_DLL + 0x73F6D8
paintedtime = _HW_DLL + 0x9FA7A0
paintbuffer = paintedtime - 0xC160
soundtime = paintbuffer + 0xC15C
;
; ------------------------------------------------------------------------------
; Demo Live Tools hooks (currently only mirv_voice_block)
; ------------------------------------------------------------------------------
;
CL_ParseServerMessage = _HW_DLL + 0x2A690
net_message_cursize = _HW_DLL + 0xA6E570
net_message = net_message_cursize - 0x10
msg_readcount = _HW_DLL + 0xFD3C68
CL_ParseServerMessage_CmdRead = CL_ParseServerMessage + 0x0E3
DTOURSZ_CL_ParseServerMessage_CmdRead = 0x07
;
; ------------------------------------------------------------------------------
; Various hooks
; ------------------------------------------------------------------------------
;
; tfc DemoEdit campath fix:
HudSpectator_tfc = 0x01909A00 ; unchecked
HudSpectator_cmp_tfc = HudSpectator_tfc + 0x23 ; unchecked
;
; UpdateSpectatorPanel overviewmode check jump (for HLTV menu removal):
UpdateSpectatorPanel_checkjmp_ag_clofs = 0x028091 ; Adrenaline-Gamer (ag), client.dll ofs ; unchecked
UpdateSpectatorPanel_checkjmp_tfc = 0x019439a1 ; Team Fortress Classic (tfc) ; unchecked
UpdateSpectatorPanel_checkjmp_ns_clofs = 0x033F3D ; Natuaral Selection (ns), client.dll ofs ; unchecked
UpdateSpectatorPanel_checkjmp_valve = 0x01940221 ; Half-Life (valve) ; unchecked
;
; cstrike Team color hook:
; ALL OFFSETS ARE RELATIVE TO client.dll!
GetClientColor = 0x443C0 ; function, used by head-up and overview i.e.
DTOURSZ_GetClientColor = 0x0a
unkInlineClientColorA = 0x44970 ; inline, used to draw attacker color
SZ_unkInlineClientColorA = 0x3C
unkInlineClientColorV = 0x449F8 ; inline, used to draw victim color
SZ_unkInlineClientColorV = 0x3C
;
; cstrike CrossHair fix related: ; new
CLOFS_UnkCstrikeCrosshairFn = 0x415B0
DTOURSZ_UnkCstrikeCrosshairFn = 0x09
CLOFS_UnkCstrikeCh_mul_fac = 0xCA500
CLOFS_UnkCstrikeCh_add_fac = 0xC0298
;
R_PolyBlend = _HW_DLL + 0x50C50
DTOURSZ_R_PolyBlend  = 0x09
;
Mod_LeafPVS = _HW_DLL + 0x35E20
DTOURSZ_Mod_LeafPVS = 0x0e
;
; DecalTexture hook:
;   this function called in a unkonown sub function of R_DrawWorld that is
;   called before R_BlendLightmaps. the unknown functions draws out all
;   decals of the map as it seems or s.th. and uses this one to get
;   a decal's texture
UnkGetDecalTexture = _HW_DLL + 0x3C5F0
DTOURSZ_UnkGetDecalTexture = 0x05
