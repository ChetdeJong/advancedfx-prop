1.0.60.251

- Added: mirv_movie_simulate 0|1
         If set to 1 recording will not create any files (simulation mode), if
         it runs too fast you can supply an additional delay in milli seconds
         with mirv_movie_simulate_delay (1000 ms = 1 sec), be carefull with
         the delay ;)
         
- Thanks: cRZYFST (style-productions.net)


1.0.60.249

- Changed: exporting motion data in stereo mode will create two files now since
           several programs had problems with handling BVH files with two roots
           (not to mention an typo that was present in stereo mode heh).

- Thanks: msthavoc for testing.


1.0.60.248

- Changed: internal changes to the address config system.

- Changed: removed dependency on msvcp71.dll

- Added: mirv_movie_export_cammotion 0|1
         creates Biovision (BVH) compatible motion data that can be imported
         i.e. in Blender and 3ds Max.
         The file will contain one root / bone named MdtCam in normal mode or
         two roots / bones named MdtCamLeft and MdtCamRight in stereo mode.
         The bone origin (head) is the view origin and the bone's end site (tip)
         points 1 Unit into the forward direction.
         Valve defines 1 Unit in H-L 1 / CS 1.6 as 1 Inch.
        

1.0.60.152

- Added: mirv_movie_separate_hud 0|1|2
         Set to 1 if you want to have an separate hud stream (, there should be
         no hud on any of the other streams then).
         By default there is also an "hudalpha" stream which you should use
         to blend an black layer bellow and draw the "hudcolor" stream additive
         onto it (since not all HUD elements are additive).
         You can turn the hudalpha stream off if you don't need it by using
	     mirv_movie_separate_hud 2 instead.
	     
- Changed: Naming of output files to:
           Name_Take#_StreamType[_StereoType]_Frame#.tga
           
I'd say one of the caziest versions ever : P


1.0.60.41

- Changed: New stream capturing system, now there will be no delay (was 1ms)
           between the streams anymore.
           If there are problems u can use the old one with
           __mirv_movie_oldcapture 1 (is 0 by default).
           
- Added: mirv_movie_stereomode, mirv_movie_stereo_centerdist and
         mirv_movie_stereo_yawdegrees for faking stereo captures.
         (True stereo captures would require adjustments of the projection.)
         Set mirv_movie_stereomode 1 to enable stereo capturing.

The HUD problems (only the (left) worldstream has the HUD if it is enabled)
are not solved yet and remain the same as in previous versions.


1.0.60.9

- Added: Ini system draft. Currently addresses can be changed manually.

1.0.60.7

- Fixed: Valve's Steam community release broke MDT.
         We (MIRVIN_Monkey, ripieces, neomic) hope this update makes MDT
         working for you again :)


1.0.60.0 UNOFFICIAL

- Added: Capability to force resolutions, currently focused on windowed mode.
         The loader has been extended to reflect and support those additions.
         You will find a GUI for forcing specific resolutions when you switch
         the MDT loader to extended mode.
         Note: There are problems with forcing fullscreen (windowed mode is
         recommended). Also the color depth seems to be limited to the desktop
         depth or the last depth you selected in your game. And the Height has
         to be 480 Pixels or greater. And the ingame isn't adjusted (You will
         see what I mean when using an extreme Widht and a small Height).
         However the bottom line is: You wanted to be able to force wide
         screen resolutions (i.e. 800x500) and here it is (and it wasn't 
         too easy :)
         
- Thanks: msthavoc (Cyanide-Pictures.de) for testing

- Greets: code-mdt forum Guys :)


1.0.59.0 UNOFFICIAL

- Changed: changed the capture point of images and the matte color clearing

- Changed: modified detection of game resolution

- Changed: MDT now automatically forces gl_ztrick 0 by default in order to make sure depthdumps retrive normalized depthdata

- Added: __mirv_gl_force_noztrick, __mirv_gl_noclear for debugging (you should leave them on the default values)

- Removed: __mirv_depth_fixempty

- Thanks: really big thanks to msthavoc (Cyanide-Pictures.de) for helping with
          testing and providing his system for tests :-)


1.0.58.309 DLL UNOFFICIAL

- Fixed: mirv_cameraofs_cs should now work in ineye demos too

- Thanks: msthavoc (Cyanide-Pictures.de) for testing


1.0.58.268 DLL UNOFFICIAL

- Added: mirv_cameraofs_cs
         Can be used in Counter-Strike 1.6 to move the final view in x y z,
         I.e. mirv_cameraofs_cs 1.5 0 -10 would move the view 1.5 units to the
         right and 10 units backwards.
         This can be usefull if you want to do stereo captures, because in this
         case you could record a scene twice and use a negative x value in the
         first pass to move the camera slighlty left and a positive x value in
         the second pass to move the camera slightly right.

- Thanks: msthavoc (Cyanide-Pictures.de)


1.0.58.158 DLL UNOFFICIAL

- Added: __mirv_depth_fixempty (default 0)
         If you have one of those card's where you get an empty DepthDump
         (because those have problems with GL_FLOAT) you can try
         __mirv_depth_fixempty 1
         GL (this will try to retrive the depth with GL_UNSIGNED_INT instead
         However if 0 works fine for you take 0, 1 is slower!

- Changed: tried to reduce impact of Half-Life Client timing problems on the
           mirv_zoom_ stuff by preventing changes when deltatime gets negative
           (meaning the zoom will not pop back anymore and will stay fully
           zoomed when u are zoomed in, however on zooming stuttering can
           still occur)

- Hint: this seems to be a common problem with HLTV demos, althoug it's hardly
        noticeable:
        the client timing problems (which also happen when not using MDT) can
        also cause player models to stutter etc. (we don't know if and when we
        can fix it, since the orign of the problem is probably on Valve's end).
        However you can reduce stuttering when setting cl_clockreset to a value
        higher than the number of seconds the scene you want to record lasts.
        (I.e. if you plan to record bellow 1 minute you can set it to 60,
        however we have no idea what side effects this could cause, so may be
        note the default value first bevore changing it (I think it's 0.1 or so)).
         
- Added: mirv_crop_height (default -1)
         -1 means no (height) cropping will be applied
         you can specifiy an outputheight you want the images to be cropped to.
         (if you have a black line at the top of your images you can use this
         to cut it off by suppling the correct value (you can leave
         mirv_crop_yofs on -1 in this case)).
         
- Added: mirv_crop_yofs (default -1)
         -1 will automatically center any cropping action (so you can easily
         crop 4:3 down to 16:9 and stuff like that), other values crop value
         lines of from the top

- Changed: mirv_matte_setcolor (renamed from the BE mirv_matte_setcolour) now
           accepts values from 0 - 255 (r g b), like it was before MDT 1.0
           
- Added: mirv_matte_setcolorf - this allows directly setting the color using
         the usual GL float values (0.0 - 1.0)

- Added: In order to improve the fix for avoiding empty dumps that occured on
         some grfx cards (ATI Radeon X800, ASUS ATI x1600xt, Geforce FX 5600,
         ...) a system has been added to force GL to read from and draw to
         specific buffers. This system is enabled by default now and set to
         work on the GL_BACK buffer. You can control and even turn off this
         system with the new __mirv_forcebuffers command (type it in console
         and press enter for more infos)

- Removed: mirv_movie_fixemptydumps is now obsolete (due to the new system)

- Added: __mirv_info:
         People should use this command and copy the info it prints to the
         console when reporting bugs.
         
- Thanks: For testing and reporting details about bugs:
          msthavoc (Cyanide-Pictures.de), dios (hanshenschel.de)


1.0.58.87 DLL UNOFFICIAL

- Added: mirv_fixemptydumps:
         Several ATI card users reported problems with empty MDT output when
         AntiAliasing is enabled (i.e. ATI Radeon X800 or  asus ati x1600xt
         both Catalys 7.6). This hopefully fixes it, you can also try this
         option if you have problems with other cards.
         values: 0(Default), 1=enable fix (seems to work fine with AAx2 and
         AAx4 however on a Radeon X800 there are problems with AAx6 (messed
         up image)

- Added: mirv_depth_logarithmic; Values:  0 = use linear scale (old method),
         any other x = use a logrithmic scale where x specifies how fast the
         distance grows, default     : 32

- Thanks: Thanks to Slize (Creative-Movies.de) for testing and feedback and
          especially entrioN (AirWalk-Media.com) for a massive amount of testing
          related to the empty dumps problem, thx guys!


1.0.57.0 DLL

- This is where this changelog starts.