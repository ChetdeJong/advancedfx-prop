Version: Febraury 20 update

For more info about whats going on here see:
C:\Libraries\q1source\QW\client\snd_mix.c
C:\Libraries\q1source\QW\client\snd_dma.c

Modules loaded:
03520000 hw


First we try to locate S_Update_ :

0:000> s -a hw L1000000 "Couldn't get sound buffer status\n"
03670e48  43 6f 75 6c 64 6e 27 74-20 67 65 74 20 73 6f 75  Couldn't get sou
0:000> s hw L1000000 48 0e 67 03
035ac737  48 0e 67 03 e8 e0 00 fa-ff 83 c4 04 f6 44 24 08  H.g..........D$.

035ac72f ff5124          call    dword ptr [ecx+24h]
035ac732 85c0            test    eax,eax
035ac734 740d            je      hw!CreateInterface+0x2e963 (035ac743)
035ac736 68480e6703      push    offset hw!vgui::Frame::`vftable'+0x3410c (03670e48)

break on 035ac734 and follow till ret:

03576d96 e875560300      call    hw!CreateInterface+0x2e630 (035ac410)
03576d9b 83c410          add     esp,10h
03576d9e 83c424          add     esp,24h

==>
03576d96 => 035ac410 is not S_Update_

Let me explain: the compiler merged several calls into
a single call, you will have to follow till the first
single jmp instruction and then you get the address of
S_Update_:

// S_Update_
//
035ac6a0 51              push    ecx
035ac6a1 a16c54bd03      mov     eax,dword ptr [hw!vgui::Frame::`vftable'+0x598730 (03bd546c)]
035ac6a6 85c0            test    eax,eax
035ac6a8 0f84d4000000    je      hw!CreateInterface+0x2e9a2 (035ac782)
035ac6ae a16054bd03      mov     eax,dword ptr [hw!vgui::Frame::`vftable'+0x598724 (03bd5460)]
035ac6b3 85c0            test    eax,eax
035ac6b5 0f8fc7000000    jg      hw!CreateInterface+0x2e9a2 (035ac782)
035ac6bb 56              push    esi
035ac6bc 57              push    edi
//
// GetSoundtime();
035ac6bd e88efeffff      call    hw!CreateInterface+0x2e770 (035ac550)
...
035ac72f ff5124          call    dword ptr [ecx+24h]
035ac732 85c0            test    eax,eax
035ac734 740d            je      hw!CreateInterface+0x2e963 (035ac743)
035ac736 68480e6703      push    offset hw!vgui::Frame::`vftable'+0x3410c (03670e48) // "Couldn't get sound buffer status\n"
...
// 	S_PaintChannels (endtime);
//
// 	SNDDMA_Submit ();
035ac76d d1ef            shr     edi,1
035ac76f 57              push    edi
035ac770 e85b1a0000      call    hw!CreateInterface+0x303f0 (035ae1d0)
035ac775 83c404          add     esp,4
035ac778 5f              pop     edi
035ac779 5e              pop     esi
035ac77a 83c404          add     esp,4
035ac77d e94e4e0000      jmp     hw!CreateInterface+0x337f0 (035b15d0)
035ac782 59              pop     ecx
035ac783 c3              ret

==>
035ac6bd => 035ac550 is void GetSoundtime(void)
035ac770 => 035ae1d0 is void S_PaintChannels(int endtime)

// void GetSoundtime(void)
//
035ac550 51              push    ecx
035ac551 8b0d6854bd03    mov     ecx,dword ptr [hw!vgui::Frame::`vftable'+0x59872c (03bd5468)]
035ac557 56              push    esi
035ac558 85c9            test    ecx,ecx
035ac55a 57              push    edi
035ac55b 740b            je      hw!CreateInterface+0x2e788 (035ac568)
035ac55d 8b4110          mov     eax,dword ptr [ecx+10h]
035ac560 99              cdq
035ac561 f7790c          idiv    eax,dword ptr [ecx+0Ch]
035ac564 8bf8            mov     edi,eax
035ac566 eb04            jmp     hw!CreateInterface+0x2e78c (035ac56c)
035ac568 8b7c2408        mov     edi,dword ptr [esp+8]
035ac56c e8ef4f0000      call    hw!CreateInterface+0x33780 (035b1560)
035ac571 8bf0            mov     esi,eax
035ac573 a15854bd03      mov     eax,dword ptr [hw!vgui::Frame::`vftable'+0x59871c (03bd5458)]
035ac578 3bf0            cmp     esi,eax
035ac57a 7d33            jge     hw!CreateInterface+0x2e7cf (035ac5af)
035ac57c 8b0d5c54bd03    mov     ecx,dword ptr [hw!vgui::Frame::`vftable'+0x598720 (03bd545c)]
//
//		buffers++;					// buffer wrapped
//		
//		if (paintedtime > 0x40000000)
035ac582 a1e08ff403      mov     eax,dword ptr [hw!vgui::Frame::`vftable'+0x90c2a4 (03f48fe0)]
035ac587 41              inc     ecx
035ac588 3d00000040      cmp     eax,offset <Unloaded_ud.drv>+0x3fffffff (40000000)
//
035ac58d 890d5c54bd03    mov     dword ptr [hw!vgui::Frame::`vftable'+0x598720 (03bd545c)],ecx
035ac593 7e1a            jle     hw!CreateInterface+0x2e7cf (035ac5af)
035ac595 6a01            push    1
035ac597 c7055c54bd0300000000 mov dword ptr [hw!vgui::Frame::`vftable'+0x598720 (03bd545c)],0
035ac5a1 893de08ff403    mov     dword ptr [hw!vgui::Frame::`vftable'+0x90c2a4 (03f48fe0)],edi
035ac5a7 e814fbffff      call    hw!CreateInterface+0x2e2e0 (035ac0c0)
035ac5ac 83c404          add     esp,4
035ac5af 8b0d6854bd03    mov     ecx,dword ptr [hw!vgui::Frame::`vftable'+0x59872c (03bd5468)]
035ac5b5 89355854bd03    mov     dword ptr [hw!vgui::Frame::`vftable'+0x59871c (03bd5458)],esi
035ac5bb 85c9            test    ecx,ecx
035ac5bd 7418            je      hw!CreateInterface+0x2e7f7 (035ac5d7)
035ac5bf 8bc6            mov     eax,esi
035ac5c1 99              cdq
035ac5c2 f7790c          idiv    eax,dword ptr [ecx+0Ch]
035ac5c5 8bc8            mov     ecx,eax
035ac5c7 a15c54bd03      mov     eax,dword ptr [hw!vgui::Frame::`vftable'+0x598720 (03bd545c)]
035ac5cc 0fafc7          imul    eax,edi
035ac5cf 03c8            add     ecx,eax
035ac5d1 890ddc8ff403    mov     dword ptr [hw!vgui::Frame::`vftable'+0x90c2a0 (03f48fdc)],ecx
035ac5d7 5f              pop     edi
035ac5d8 5e              pop     esi
035ac5d9 59              pop     ecx
035ac5da c3              ret

==>
035ac582 => 03f48fe0 is paintedtime
035ac5af => 03bd5468 is shm
035ac5d1 => 03f48fdc is soundtime

// void S_PaintChannels(int endtime)
// {
// 	while (paintedtime < endtime)
// 	{
035ae1d0 a1e08ff403      mov     eax,dword ptr [hw!vgui::Frame::`vftable'+0x90c2a4 (03f48fe0)]
035ae1d5 55              push    ebp
035ae1d6 8b6c2408        mov     ebp,dword ptr [esp+8]
035ae1da 3bc5            cmp     eax,ebp
035ae1dc 0f8d7b010000    jge     hw!CreateInterface+0x3057d (035ae35d)
//
035ae1e2 53              push    ebx
035ae1e3 56              push    esi
035ae1e4 57              push    edi
035ae1e5 8bcd            mov     ecx,ebp
035ae1e7 8bdd            mov     ebx,ebp
035ae1e9 2bc8            sub     ecx,eax
035ae1eb 81f900020000    cmp     ecx,offset <Unloaded_ud.drv>+0x1ff (00000200)
035ae1f1 7e06            jle     hw!CreateInterface+0x30419 (035ae1f9)
035ae1f3 8d9800020000    lea     ebx,<Unloaded_ud.drv>+0x1ff (00000200)[eax]
035ae1f9 8bf3            mov     esi,ebx
035ae1fb 2bf0            sub     esi,eax
035ae1fd 8d14f500000000  lea     edx,[esi*8]
//
// Q_memset(paintbuffer, 0, (end - paintedtime) * sizeof(portable_samplepair_t));
035ae204 52              push    edx
035ae205 6a00            push    0
035ae207 68a0eef303      push    offset hw!vgui::Frame::`vftable'+0x902164 (03f3eea0)
035ae20c e8ffaff9ff      call    hw+0x29210 (03549210)
...
035ae33f 83c40c          add     esp,0Ch
035ae342 53              push    ebx
035ae343 e818f9ffff      call    hw!CreateInterface+0x2fe80 (035adc60)
035ae348 83c404          add     esp,4
035ae34b 8bc3            mov     eax,ebx
035ae34d 3bdd            cmp     ebx,ebp
035ae34f a3e08ff403      mov     dword ptr [hw!vgui::Frame::`vftable'+0x90c2a4 (03f48fe0)],eax
035ae354 0f8c8bfeffff    jl      hw!CreateInterface+0x30405 (035ae1e5)
035ae35a 5f              pop     edi
035ae35b 5e              pop     esi
035ae35c 5b              pop     ebx
035ae35d 5d              pop     ebp
035ae35e c3              ret

==>
035ae207 => 03f3eea0 is paintbuffer
035ae343 => 035adc60 is void S_TransferPaintBuffer(int endtime)


Now we try to locate SND_PickChannel:
It's called in S_StartSound, thus we try to locate S_StartSound first:
S_Startsound is called in S_LocalSound:

0:000> s -a hw L1000000 "S_LocalSound: can't cache %s\n"
03670ea8  53 5f 4c 6f 63 61 6c 53-6f 75 6e 64 3a 20 63 61  S_LocalSound: ca
0:000> s hw L1000000 a8 0e 67 03
035ac9f0  a8 0e 67 03 e8 27 fe f9-ff 83 c4 08 5e c3 6a 64  ..g..'......^.jd

035ac9f0 -1 == is inside S_LocalSound

// S_LocalSound
//
...
// 		Con_Printf ("S_LocalSound: can't cache %s\n", sound);
035ac9ee 56              push    esi
035ac9ef 68a80e6703      push    offset hw!vgui::Frame::`vftable'+0x3416c (03670ea8)
035ac9f4 e827fef9ff      call    hw+0x2c820 (0354c820)
//		return;
035ac9f9 83c408          add     esp,8
035ac9fc 5e              pop     esi
035ac9fd c3              ret
//
// 	}
// 	S_StartSound (cl.viewentity, -1, sfx, vec3_origin, 1, 1, 0, 0x64);
035ac9fe 6a64            push    64h
035aca00 6a00            push    0
035aca02 680000803f      push    offset <Unloaded_ud.drv>+0x3f7fffff (3f800000)
035aca07 680000803f      push    offset <Unloaded_ud.drv>+0x3f7fffff (3f800000)
035aca0c 6824e5b503      push    offset hw!vgui::Frame::`vftable'+0x5217e8 (03b5e524)
035aca11 50              push    eax
035aca12 a12cd67104      mov     eax,dword ptr [hw!qwglMakeCurrent+0x7713a0 (0471d62c)]
035aca17 6aff            push    0FFFFFFFFh
035aca19 50              push    eax
035aca1a e891f1ffff      call    hw!CreateInterface+0x2ddd0 (035abbb0)
035aca1f 83c420          add     esp,20h
035aca22 5e              pop     esi
035aca23 c3              ret

==>
035aca1a => 035abbb0 is S_StartSound with two more params, Half-Life calls it S_StartDynamicSound

// S_StartSound / S_StartDynamicSound
//
035abbb0 83ec48          sub     esp,48h
...
035abc90 85c0            test    eax,eax
035abc92 7515            jne     hw!CreateInterface+0x2dec9 (035abca9)
035abc94 68ec0c6703      push    offset hw!vgui::Frame::`vftable'+0x33fb0 (03670cec)
035abc99 e8a20cfaff      call    hw+0x2c940 (0354c940)
035abc9e 83c404          add     esp,4
035abca1 5f              pop     edi
035abca2 5e              pop     esi
035abca3 5d              pop     ebp
035abca4 5b              pop     ebx
035abca5 83c448          add     esp,48h
035abca8 c3              ret
035abca9 d905606b6603    fld     dword ptr [hw!vgui::Frame::`vftable'+0x29e24 (03666b60)]
035abcaf d805d4b16303    fadd    dword ptr [hw!vgui::Frame::operator=+0x5ce54 (0363b1d4)]
035abcb5 db442478        fild    dword ptr [esp+78h]
035abcb9 d95c2478        fstp    dword ptr [esp+78h]
035abcbd d84c2478        fmul    dword ptr [esp+78h]
035abcc1 d80d34ba6303    fmul    dword ptr [hw!vgui::Frame::operator=+0x5d6b4 (0363ba34)]
035abcc7 e82c8e0700      call    hw!vgui::Frame::operator=+0x46778 (03624af8)
035abccc 56              push    esi
035abccd 53              push    ebx
035abcce 55              push    ebp
035abccf 89842484000000  mov     dword ptr <Unloaded_ud.drv>+0x83 (00000084)[esp],eax
035abcd6 e895faffff      call    hw!CreateInterface+0x2d990 (035ab770)
035abcdb 8bf0            mov     esi,eax
035abcdd 83c40c          add     esp,0Ch
035abce0 85f6            test    esi,esi
035abce2 0f848a010000    je      hw!CreateInterface+0x2e092 (035abe72)
...
035abe72 5f              pop     edi
035abe73 5e              pop     esi
035abe74 5d              pop     ebp
035abe75 5b              pop     ebx
035abe76 83c448          add     esp,48h
035abe79 c3              ret

==>
035abcd6 => 035ab770 is SND_Pickchannel with two more params