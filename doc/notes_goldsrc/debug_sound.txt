Version: April 02 update

For more info about whats going on here see:
C:\Libraries\q1source\QW\client\snd_mix.c
C:\Libraries\q1source\QW\client\snd_dma.c

Modules loaded:
03520000 hw


First we try to locate S_Update_ :

0:000> s -a hw L1000000 "Couldn't get sound buffer status\n"
036730f8  43 6f 75 6c 64 6e 27 74-20 67 65 74 20 73 6f 75  Couldn't get sou
0:000> s hw L1000000 f8 30 67 03
035acd87  f8 30 67 03 e8 f0 fa f9-ff 83 c4 04 f6 44 24 08  .0g..........D$.

035acd7f ff5124          call    dword ptr [ecx+24h]
035acd82 85c0            test    eax,eax
035acd84 740d            je      hw!CreateInterface+0x2e953 (035acd93)
035acd86 68f8306703      push    offset hw!vgui::Frame::`vftable'+0x34394 (036730f8)

break on 035acd84 and follow till ret:

035773d2 e889560300      call    hw!CreateInterface+0x2e620 (035aca60)
035773d7 83c420          add     esp,20h
035773da 83c424          add     esp,24h

==>
035773d2 => 035aca60 is not S_Update_

Let me explain: the compiler merged several calls into
a single call, you will have to follow till the first
single jmp instruction and then you get the address of
S_Update_:

// S_Update_
//
035accf0 51              push    ecx
035accf1 a16c94bd03      mov     eax,dword ptr [hw!vgui::Frame::`vftable'+0x59a708 (03bd946c)]
035accf6 85c0            test    eax,eax
035accf8 0f84d4000000    je      hw!CreateInterface+0x2e992 (035acdd2)
035accfe a16094bd03      mov     eax,dword ptr [hw!vgui::Frame::`vftable'+0x59a6fc (03bd9460)]
035acd03 85c0            test    eax,eax
035acd05 0f8fc7000000    jg      hw!CreateInterface+0x2e992 (035acdd2)
035acd0b 56              push    esi
035acd0c 57              push    edi
//
// GetSoundtime();
035acd0d e88efeffff      call    hw!CreateInterface+0x2e760 (035acba0)
...
035acd7f ff5124          call    dword ptr [ecx+24h]
035acd82 85c0            test    eax,eax
035acd84 740d            je      hw!CreateInterface+0x2e953 (035acd93)
035acd86 68f8306703      push    offset hw!vgui::Frame::`vftable'+0x34394 (036730f8) // "Couldn't get sound buffer status\n"
...
// 	S_PaintChannels (endtime);
//
// 	SNDDMA_Submit ();
035acdbd d1ef            shr     edi,1
035acdbf 57              push    edi
035acdc0 e85b1a0000      call    hw!CreateInterface+0x303e0 (035ae820)
035acdc5 83c404          add     esp,4
035acdc8 5f              pop     edi
035acdc9 5e              pop     esi
035acdca 83c404          add     esp,4
035acdcd e94e4e0000      jmp     hw!CreateInterface+0x337e0 (035b1c20)
035acdd2 59              pop     ecx
035acdd3 c3              ret

==>
035acd0d => 035acba0 is void GetSoundtime(void)
035acdc0 => 035ae820 is void S_PaintChannels(int endtime)

// void GetSoundtime(void)
//
035acba0 51              push    ecx
035acba1 8b0d6894bd03    mov     ecx,dword ptr [hw!vgui::Frame::`vftable'+0x59a704 (03bd9468)]
035acba7 56              push    esi
035acba8 85c9            test    ecx,ecx
035acbaa 57              push    edi
035acbab 740b            je      hw!CreateInterface+0x2e778 (035acbb8)
035acbad 8b4110          mov     eax,dword ptr [ecx+10h]
035acbb0 99              cdq
035acbb1 f7790c          idiv    eax,dword ptr [ecx+0Ch]
035acbb4 8bf8            mov     edi,eax
035acbb6 eb04            jmp     hw!CreateInterface+0x2e77c (035acbbc)
035acbb8 8b7c2408        mov     edi,dword ptr [esp+8]
035acbbc e8ef4f0000      call    hw!CreateInterface+0x33770 (035b1bb0)
035acbc1 8bf0            mov     esi,eax
035acbc3 a15894bd03      mov     eax,dword ptr [hw!vgui::Frame::`vftable'+0x59a6f4 (03bd9458)]
035acbc8 3bf0            cmp     esi,eax
035acbca 7d33            jge     hw!CreateInterface+0x2e7bf (035acbff)
035acbcc 8b0d5c94bd03    mov     ecx,dword ptr [hw!vgui::Frame::`vftable'+0x59a6f8 (03bd945c)]
//
//		buffers++;					// buffer wrapped
//		
//		if (paintedtime > 0x40000000)
035acbd2 a1e0cff403      mov     eax,dword ptr [hw!vgui::Frame::`vftable'+0x90e27c (03f4cfe0)]
035acbd7 41              inc     ecx
035acbd8 3d00000040      cmp     eax,offset <Unloaded_ud.drv>+0x3fffffff (40000000)
//
035acbdd 890d5c94bd03    mov     dword ptr [hw!vgui::Frame::`vftable'+0x59a6f8 (03bd945c)],ecx
035acbe3 7e1a            jle     hw!CreateInterface+0x2e7bf (035acbff)
035acbe5 6a01            push    1
035acbe7 c7055c94bd0300000000 mov dword ptr [hw!vgui::Frame::`vftable'+0x59a6f8 (03bd945c)],0
035acbf1 893de0cff403    mov     dword ptr [hw!vgui::Frame::`vftable'+0x90e27c (03f4cfe0)],edi
035acbf7 e814fbffff      call    hw!CreateInterface+0x2e2d0 (035ac710)
035acbfc 83c404          add     esp,4
035acbff 8b0d6894bd03    mov     ecx,dword ptr [hw!vgui::Frame::`vftable'+0x59a704 (03bd9468)]
035acc05 89355894bd03    mov     dword ptr [hw!vgui::Frame::`vftable'+0x59a6f4 (03bd9458)],esi
035acc0b 85c9            test    ecx,ecx
035acc0d 7418            je      hw!CreateInterface+0x2e7e7 (035acc27)
035acc0f 8bc6            mov     eax,esi
035acc11 99              cdq
035acc12 f7790c          idiv    eax,dword ptr [ecx+0Ch]
035acc15 8bc8            mov     ecx,eax
035acc17 a15c94bd03      mov     eax,dword ptr [hw!vgui::Frame::`vftable'+0x59a6f8 (03bd945c)]
035acc1c 0fafc7          imul    eax,edi
035acc1f 03c8            add     ecx,eax
035acc21 890ddccff403    mov     dword ptr [hw!vgui::Frame::`vftable'+0x90e278 (03f4cfdc)],ecx
035acc27 5f              pop     edi
035acc28 5e              pop     esi
035acc29 59              pop     ecx
035acc2a c3              ret

==>
035acbd2 => 03f4cfe0 is paintedtime
035acbff => 03bd9468 is shm
035acc21 => 03f4cfdc is soundtime

// void S_PaintChannels(int endtime)
// {
// 	while (paintedtime < endtime)
// 	{
035ae820 a1e0cff403      mov     eax,dword ptr [hw!vgui::Frame::`vftable'+0x90e27c (03f4cfe0)]
035ae825 55              push    ebp
035ae826 8b6c2408        mov     ebp,dword ptr [esp+8]
035ae82a 3bc5            cmp     eax,ebp
035ae82c 0f8d7b010000    jge     hw!CreateInterface+0x3056d (035ae9ad)
//
035ae832 53              push    ebx
035ae833 56              push    esi
035ae834 57              push    edi
035ae835 8bcd            mov     ecx,ebp
035ae837 8bdd            mov     ebx,ebp
035ae839 2bc8            sub     ecx,eax
035ae83b 81f900020000    cmp     ecx,offset <Unloaded_ud.drv>+0x1ff (00000200)
035ae841 7e06            jle     hw!CreateInterface+0x30409 (035ae849)
035ae843 8d9800020000    lea     ebx,<Unloaded_ud.drv>+0x1ff (00000200)[eax]
035ae849 8bf3            mov     esi,ebx
035ae84b 2bf0            sub     esi,eax
035ae84d 8d14f500000000  lea     edx,[esi*8]
//
// Q_memset(paintbuffer, 0, (end - paintedtime) * sizeof(portable_samplepair_t));
035ae854 52              push    edx
035ae855 6a00            push    0
035ae857 68a02ef403      push    offset hw!vgui::Frame::`vftable'+0x90413c (03f42ea0)
035ae85c e82faaf9ff      call    hw+0x29290 (03549290)
...
035ae98f 83c40c          add     esp,0Ch
035ae992 53              push    ebx
035ae993 e818f9ffff      call    hw!CreateInterface+0x2fe70 (035ae2b0)
035ae998 83c404          add     esp,4
035ae99b 8bc3            mov     eax,ebx
035ae99d 3bdd            cmp     ebx,ebp
035ae99f a3e0cff403      mov     dword ptr [hw!vgui::Frame::`vftable'+0x90e27c (03f4cfe0)],eax
035ae9a4 0f8c8bfeffff    jl      hw!CreateInterface+0x303f5 (035ae835)
035ae9aa 5f              pop     edi
035ae9ab 5e              pop     esi
035ae9ac 5b              pop     ebx
035ae9ad 5d              pop     ebp
035ae9ae c3              ret

==>
035ae857 => 03f42ea0 is paintbuffer
035ae993 => 035ae2b0 is void S_TransferPaintBuffer(int endtime)


Now we try to locate SND_PickChannel:
It's called in S_StartSound, thus we try to locate S_StartSound first:
S_Startsound is called in S_LocalSound:

0:000> s -a hw L1000000 "S_LocalSound: can't cache %s\n"
03673158  53 5f 4c 6f 63 61 6c 53-6f 75 6e 64 3a 20 63 61  S_LocalSound: ca
0:000> s hw L1000000 58 31 67 03
035ad040  58 31 67 03 e8 37 f8 f9-ff 83 c4 08 5e c3 6a 64  X1g..7......^.jd

035ad040 -1 == is inside S_LocalSound

// S_LocalSound
//
...
// 		Con_Printf ("S_LocalSound: can't cache %s\n", sound);
035ad03e 56              push    esi
035ad03f 6858316703      push    offset hw!vgui::Frame::`vftable'+0x343f4 (03673158)
035ad044 e837f8f9ff      call    hw+0x2c880 (0354c880)
//		return;
035ad049 83c408          add     esp,8
035ad04c 5e              pop     esi
035ad04d c3              ret
//
// 	}
// 	S_StartSound (cl.viewentity, -1, sfx, vec3_origin, 1, 1, 0, 0x64);
035ad04e 6a64            push    64h
035ad050 6a00            push    0
035ad052 680000803f      push    offset <Unloaded_ud.drv>+0x3f7fffff (3f800000)
035ad057 680000803f      push    offset <Unloaded_ud.drv>+0x3f7fffff (3f800000)
035ad05c 682425b603      push    offset hw!vgui::Frame::`vftable'+0x5237c0 (03b62524)
035ad061 50              push    eax
035ad062 a12c167204      mov     eax,dword ptr [hw!qwglMakeCurrent+0x7713a0 (0472162c)]
035ad067 6aff            push    0FFFFFFFFh
035ad069 50              push    eax
035ad06a e891f1ffff      call    hw!CreateInterface+0x2ddc0 (035ac200)
035ad06f 83c420          add     esp,20h
035ad072 5e              pop     esi
035ad073 c3              ret

==>
035ad06a => 035ac200 is S_StartSound with two more params, Half-Life calls it S_StartDynamicSound

// S_StartSound / S_StartDynamicSound
//
035ac200 83ec48          sub     esp,48h
...
035ac2e0 85c0            test    eax,eax
035ac2e2 7515            jne     hw!CreateInterface+0x2deb9 (035ac2f9)
035ac2e4 689c2f6703      push    offset hw!vgui::Frame::`vftable'+0x34238 (03672f9c)
035ac2e9 e8b206faff      call    hw+0x2c9a0 (0354c9a0)
035ac2ee 83c404          add     esp,4
035ac2f1 5f              pop     edi
035ac2f2 5e              pop     esi
035ac2f3 5d              pop     ebp
035ac2f4 5b              pop     ebx
035ac2f5 83c448          add     esp,48h
035ac2f8 c3              ret
035ac2f9 d905108e6603    fld     dword ptr [hw!vgui::Frame::`vftable'+0x2a0ac (03668e10)]
035ac2ff d80504d26303    fadd    dword ptr [hw!vgui::Frame::operator=+0x5d0e4 (0363d204)]
035ac305 db442478        fild    dword ptr [esp+78h]
035ac309 d95c2478        fstp    dword ptr [esp+78h]
035ac30d d84c2478        fmul    dword ptr [esp+78h]
035ac311 d80d5cda6303    fmul    dword ptr [hw!vgui::Frame::operator=+0x5d93c (0363da5c)]
035ac317 e80ca50700      call    hw!vgui::Frame::operator=+0x46708 (03626828)
035ac31c 56              push    esi
035ac31d 53              push    ebx
035ac31e 55              push    ebp
035ac31f 89842484000000  mov     dword ptr <Unloaded_ud.drv>+0x83 (00000084)[esp],eax
035ac326 e895faffff      call    hw!CreateInterface+0x2d980 (035abdc0)
035ac32b 8bf0            mov     esi,eax
035ac32d 83c40c          add     esp,0Ch
035ac330 85f6            test    esi,esi
035ac332 0f848a010000    je      hw!CreateInterface+0x2e082 (035ac4c2)
...
035ac4c2 5f              pop     edi
035ac4c3 5e              pop     esi
035ac4c4 5d              pop     ebp
035ac4c5 5b              pop     ebx
035ac4c6 83c448          add     esp,48h
035ac4c9 c3              ret

==>
035ac326 => 035abdc0 is SND_Pickchannel with two more params